USE springboardopt;

-- -------------------------------------
SET @v1 = 1612521;
SET @v2 = 1145072;
SET @v3 = 1828467;
SET @v4 = 'MGT382';
SET @v5 = 'Amber Hill';
SET @v6 = 'MGT';
SET @v7 = 'EE';			  
SET @v8 = 'MAT';
 Alter table Student ADD index(id,name);
-- 2. List the names of students with id in the range of v2 (id) to v3 (inclusive).
SELECT name FROM Student WHERE id BETWEEN @v2 AND @v3;


----All 400 rows were being scanned without using any index
---- indexing on the id , name columns. indexing on all the columns used make the query run faster

---Explain before and after
/*explain SELECT name FROM Student WHERE id BETWEEN @v2 AND @v3;
+----+-------------+---------+------------+------+---------------+------+---------+------+------+----------+-------------+
| id | select_type | table   | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra       |
+----+-------------+---------+------------+------+---------------+------+---------+------+------+----------+-------------+
|  1 | SIMPLE      | Student | NULL       | ALL  | NULL          | NULL | NULL    | NULL |  400 |    11.11 | Using where |

After index search is in a range while using primary index.

explain SELECT name FROM Student WHERE id BETWEEN @v2 AND @v3;
+----+-------------+---------+------------+-------+---------------+------+---------+------+------+----------+--------------------------+
| id | select_type | table   | partitions | type  | possible_keys | key  | key_len | ref  | rows | filtered | Extra                    |
+----+-------------+---------+------------+-------+---------------+------+---------+------+------+----------+--------------------------+
|  1 | SIMPLE      | Student | NULL       | range | id            | id   | 4       | NULL |  278 |   100.00 | Using where; Using index |
+----+-------------+---------+------------+-------+---------------+------+---------+------+------+----------+--------------------------+
*/

---Also improved the execution time.
/*Before
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| EXPLAIN                                                                                                                                                                                                                             |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| -> Filter: (Student.id between <cache>((@v2)) and <cache>((@v3)))  (cost=5.44 rows=44) (actual time=1.838..10.277 rows=278 loops=1)
    -> Table scan on Student  (cost=5.44 rows=400) (actual time=0.033..4.505 rows=400 loops=1)
 |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
After
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| EXPLAIN                                                                                                                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| -> Filter: (Student.id between <cache>((@v2)) and <cache>((@v3)))  (cost=64.52 rows=278) (actual time=0.082..8.027 rows=278 loops=1)
    -> Index range scan on Student using id  (cost=64.52 rows=278) (actual time=0.037..2.764 rows=278 loops=1)
 |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.01 sec)
*/
